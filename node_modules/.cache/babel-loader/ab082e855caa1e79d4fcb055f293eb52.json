{"ast":null,"code":"import _toConsumableArray from\"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/node_modules/@babel/runtime/helpers/esm/slicedToArray\";///////////todo list ATTEMPT 2/////////////////\nimport{useState}from\"react\";import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todoList=_useState2[0],setTodoList=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),userInput=_useState4[0],setUserInput=_useState4[1];var updateInput=function updateInput(e){//onChange of inputbox, \nsetUserInput(e.target.value);//make userInput = input of box\n};var addHandler=function addHandler(e){//onClick of add button\nvar newArr=_toConsumableArray(todoList);//Adds every task in {todoList} to newArr.\nnewArr.push(userInput);//add userInput of textbox to newArr (adds new task to list)\nsetTodoList(newArr);//sets todoList to newArray (updates frontEnd todoList with new list.)\nsetUserInput(\"\");//remove input displayed below inputBox. (seems as though nothing has changed, but the text displayed is now the content of the array, not the userInput.)\n};var removeHandler=function removeHandler(index){//remove task from list\nvar newArr=_toConsumableArray(todoList);//add every task in toDo list to newArr (makes an identical copy)\nnewArr.splice(index,1);//remove task from array\nsetTodoList(newArr);//updates frontend array with new version\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{id:\"inputs\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:updateInput}),/*#__PURE__*/_jsx(\"button\",{id:\"addButton\",onClick:addHandler,children:\"add\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click on the below buttons to remove tasks or change status\"})]}),todoList.map(function(item,index){return/*#__PURE__*/_jsx(Card,{index:index,removeHandler:removeHandler,item:item},index);})]});};var Card=function Card(props){var _useState5=useState(\"inProgressButton button\"),_useState6=_slicedToArray(_useState5,2),style=_useState6[0],setStyle=_useState6[1];var _useState7=useState(\"In Progress\"),_useState8=_slicedToArray(_useState7,2),status=_useState8[0],setStatus=_useState8[1];var changeStyle=function changeStyle(){console.log(\"you just clicked\");if(status==\"Complete\"){setStatus(\"In Progress\");setStyle(\"inProgressButton button\");}else{setStatus(\"Complete\");setStyle(\"completeButton button\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"item\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"task\",children:props.item}),/*#__PURE__*/_jsxs(\"div\",{className:\"test\",children:[/*#__PURE__*/_jsx(\"div\",{className:style,onClick:function onClick(){return changeStyle(\"Complete\");},children:/*#__PURE__*/_jsx(\"p\",{children:status})}),/*#__PURE__*/_jsx(\"div\",{className:\"remButton button\",onClick:function onClick(){return props.removeHandler(props.index);},children:/*#__PURE__*/_jsx(\"p\",{children:\"remove\"})})]})]});};export default App;","map":{"version":3,"sources":["/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/App.js"],"names":["useState","App","todoList","setTodoList","userInput","setUserInput","updateInput","e","target","value","addHandler","newArr","push","removeHandler","index","splice","map","item","Card","props","style","setStyle","status","setStatus","changeStyle","console","log"],"mappings":"8TACA;AACA,OAASA,QAAT,KAAyB,OAAzB,CACA,MAAO,WAAP,C,wFACA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CAChB,cAAgCD,QAAQ,CAAC,EAAD,CAAxC,wCAAOE,QAAP,eAAiBC,WAAjB,eACA,eAAkCH,QAAQ,CAAC,EAAD,CAA1C,yCAAOI,SAAP,eAAkBC,YAAlB,eAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,CAAD,CAAO,CAAE;AAC3BF,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CAA8B;AAC/B,CAFD,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,CAAD,CAAO,CAAE;AAC1B,GAAMI,CAAAA,MAAM,oBAAOT,QAAP,CAAZ,CAA8B;AAC9BS,MAAM,CAACC,IAAP,CAAYR,SAAZ,EAAwB;AACxBD,WAAW,CAACQ,MAAD,CAAX,CAAqB;AACrBN,YAAY,CAAC,EAAD,CAAZ,CAAiB;AAClB,CALD,CAOA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAAE;AACjC,GAAMH,CAAAA,MAAM,oBAAOT,QAAP,CAAZ,CAA8B;AAC9BS,MAAM,CAACI,MAAP,CAAcD,KAAd,CAAqB,CAArB,EAAyB;AACzBX,WAAW,CAACQ,MAAD,CAAX,CAAqB;AACtB,CAJD,CAMA,mBACE,oCACE,aAAK,EAAE,CAAC,QAAR,wBACE,cACE,IAAI,CAAC,MADP,CAEE,QAAQ,CAAEL,WAFZ,EADF,cAKE,eACE,EAAE,CAAC,WADL,CAEE,OAAO,CAAEI,UAFX,iBALF,cAUE,kFAVF,GADF,CAaGR,QAAQ,CAACc,GAAT,CAAa,SAACC,IAAD,CAAOH,KAAP,CAAiB,CAC7B,mBAAO,KAAC,IAAD,EACL,KAAK,CAAEA,KADF,CAEL,aAAa,CAAED,aAFV,CAIL,IAAI,CAAEI,IAJD,EAGAH,KAHA,CAAP,CAMD,CAPA,CAbH,GADF,CAwBD,CA9CD,CAgDA,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,CACtB,eAA0BnB,QAAQ,CAAC,yBAAD,CAAlC,yCAAOoB,KAAP,eAAcC,QAAd,eACA,eAA4BrB,QAAQ,CAAC,aAAD,CAApC,yCAAOsB,MAAP,eAAeC,SAAf,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACA,GAAIJ,MAAM,EAAE,UAAZ,CAAwB,CACtBC,SAAS,CAAC,aAAD,CAAT,CACAF,QAAQ,CAAC,yBAAD,CAAR,CACD,CAHD,IAGO,CACLE,SAAS,CAAC,UAAD,CAAT,CACAF,QAAQ,CAAC,uBAAD,CAAR,CACD,CACF,CATD,CAWA,mBACI,aAAK,SAAS,CAAC,MAAf,wBACE,WAAI,SAAS,CAAC,MAAd,UAAsBF,KAAK,CAACF,IAA5B,EADF,cAEE,aAAK,SAAS,CAAC,MAAf,wBACE,YACE,SAAS,CAAEG,KADb,CAEE,OAAO,CAAE,yBAAMI,CAAAA,WAAW,CAAC,UAAD,CAAjB,EAFX,uBAGE,mBACGF,MADH,EAHF,EADF,cAQE,YACE,SAAS,CAAC,kBADZ,CAEE,OAAO,CAAE,yBAAMH,CAAAA,KAAK,CAACN,aAAN,CAAoBM,KAAK,CAACL,KAA1B,CAAN,EAFX,uBAGE,6BAHF,EARF,GAFF,GADJ,CAqBC,CApCH,CAsCA,cAAeb,CAAAA,GAAf","sourcesContent":["\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nimport './App.css';\nconst App = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n\n  const updateInput = (e) => { //onChange of inputbox, \n    setUserInput(e.target.value); //make userInput = input of box\n  };\n\n  const addHandler = (e) => { //onClick of add button\n    const newArr = [...todoList]; //Adds every task in {todoList} to newArr.\n    newArr.push(userInput); //add userInput of textbox to newArr (adds new task to list)\n    setTodoList(newArr); //sets todoList to newArray (updates frontEnd todoList with new list.)\n    setUserInput(\"\") //remove input displayed below inputBox. (seems as though nothing has changed, but the text displayed is now the content of the array, not the userInput.)\n  };\n\n  const removeHandler = (index) => { //remove task from list\n    const newArr = [...todoList]; //add every task in toDo list to newArr (makes an identical copy)\n    newArr.splice(index, 1); //remove task from array\n    setTodoList(newArr); //updates frontend array with new version\n  };\n\n  return (\n    <div>\n      <div id=\"inputs\">\n        <input \n          type=\"text\" \n          onChange={updateInput}\n        />\n        <button \n          id=\"addButton\"\n          onClick={addHandler}>\n            add\n        </button>\n        <p>Click on the below buttons to remove tasks or change status</p>\n      </div>\n      {todoList.map((item, index) => {\n        return <Card \n          index={index} \n          removeHandler={removeHandler} \n          key={index} \n          item={item} \n        />;\n      })}\n    </div>\n  );\n};\n\nconst Card = (props) => {\n  const [style, setStyle] = useState(\"inProgressButton button\")\n  const [status, setStatus] = useState(\"In Progress\")\n\n  const changeStyle = () => {\n    console.log(\"you just clicked\");\n    if (status==\"Complete\") {\n      setStatus(\"In Progress\");\n      setStyle(\"inProgressButton button\")\n    } else {\n      setStatus(\"Complete\");\n      setStyle(\"completeButton button\")\n    }\n  };\n  \n  return (\n      <div className=\"item\">\n        <h2 className=\"task\">{props.item}</h2>\n        <div className=\"test\">\n          <div \n            className={style}\n            onClick={() => changeStyle(\"Complete\")}>\n            <p>\n              {status}\n            </p>\n          </div>\n          <div \n            className=\"remButton button\"\n            onClick={() => props.removeHandler(props.index)}>\n            <p>\n              remove\n            </p>\n          </div>\n        </div>\n    </div>\n  );\n  };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}