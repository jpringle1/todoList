{"ast":null,"code":"var _jsxFileName = \"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todoList, setTodoList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const updateInput = e => {\n    //onChange of inputbox, \n    setUserInput(e.target.value); //make userInput = input of box\n  };\n\n  const addHandler = e => {\n    //onClick of add button\n    const newArr = [...todoList]; //Adds every task in {todoList} to newArr.\n\n    newArr.push(userInput); //add userInput of textbox to newArr (adds new task to list)\n\n    setTodoList(newArr); //sets todoList to newArray (updates frontEnd todoList with new list.)\n\n    setUserInput(\"\"); //remove input displayed below inputBox. (seems as though nothing has changed, but the text displayed is now the content of the array, not the userInput.)\n  };\n\n  const removeHandler = index => {\n    //remove task from list\n    const newArr = [...todoList]; //add every task in toDo list to newArr (makes an identical copy)\n\n    newArr.splice(index, 1); //remove task from array\n\n    setTodoList(newArr); //updates frontend array with new version\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: updateInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addButton\",\n        onClick: addHandler,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Click on the below buttons to remove tasks or change status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), todoList.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        index: index,\n        removeHandler: removeHandler,\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jpfXdhjdkjRNkPgavbk7orF/iHw=\");\n\n_c = App;\n\nconst Card = props => {\n  _s2();\n\n  const [style, setStyle] = useState(\"inProgressButton button\");\n  const [status, setStatus] = useState(\"In Progress\");\n\n  const changeStyle = () => {\n    console.log(\"you just clicked\");\n\n    if (status == \"Complete\") {\n      setStatus(\"In Progress\");\n      setStyle(\"inProgressButton button\");\n    } else {\n      setStatus(\"Complete\");\n      setStyle(\"completeButton button\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"task\",\n      children: props.item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style,\n        onClick: () => changeStyle(\"Complete\"),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remButton button\",\n        onClick: () => props.removeHandler(props.index),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Card, \"VjqdPaC5EBWUtex9pYoTV6O+x8k=\");\n\n_c2 = Card;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/App.js"],"names":["useState","App","todoList","setTodoList","userInput","setUserInput","updateInput","e","target","value","addHandler","newArr","push","removeHandler","index","splice","map","item","Card","props","style","setStyle","status","setStatus","changeStyle","console","log"],"mappings":"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","sourcesContent":["\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nimport './App.css';\nconst App = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n\n  const updateInput = (e) => { //onChange of inputbox, \n    setUserInput(e.target.value); //make userInput = input of box\n  };\n\n  const addHandler = (e) => { //onClick of add button\n    const newArr = [...todoList]; //Adds every task in {todoList} to newArr.\n    newArr.push(userInput); //add userInput of textbox to newArr (adds new task to list)\n    setTodoList(newArr); //sets todoList to newArray (updates frontEnd todoList with new list.)\n    setUserInput(\"\") //remove input displayed below inputBox. (seems as though nothing has changed, but the text displayed is now the content of the array, not the userInput.)\n  };\n\n  const removeHandler = (index) => { //remove task from list\n    const newArr = [...todoList]; //add every task in toDo list to newArr (makes an identical copy)\n    newArr.splice(index, 1); //remove task from array\n    setTodoList(newArr); //updates frontend array with new version\n  };\n\n  return (\n    <div>\n      <div id=\"inputs\">\n        <input \n          type=\"text\" \n          onChange={updateInput}\n        />\n        <button \n          id=\"addButton\"\n          onClick={addHandler}>\n            add\n        </button>\n        <p>Click on the below buttons to remove tasks or change status</p>\n      </div>\n      {todoList.map((item, index) => {\n        return <Card \n          index={index} \n          removeHandler={removeHandler} \n          key={index} \n          item={item} \n        />;\n      })}\n    </div>\n  );\n};\n\nconst Card = (props) => {\n  const [style, setStyle] = useState(\"inProgressButton button\")\n  const [status, setStatus] = useState(\"In Progress\")\n\n  const changeStyle = () => {\n    console.log(\"you just clicked\");\n    if (status==\"Complete\") {\n      setStatus(\"In Progress\");\n      setStyle(\"inProgressButton button\")\n    } else {\n      setStatus(\"Complete\");\n      setStyle(\"completeButton button\")\n    }\n  };\n  \n  return (\n      <div className=\"item\">\n        <h2 className=\"task\">{props.item}</h2>\n        <div className=\"test\">\n          <div \n            className={style}\n            onClick={() => changeStyle(\"Complete\")}>\n            <p>\n              {status}\n            </p>\n          </div>\n          <div \n            className=\"remButton button\"\n            onClick={() => props.removeHandler(props.index)}>\n            <p>\n              remove\n            </p>\n          </div>\n        </div>\n    </div>\n  );\n  };\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}