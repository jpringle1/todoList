{"ast":null,"code":"var _jsxFileName = \"/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js\",\n    _s = $RefreshSig$();\n\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const updateInput = e => {\n    setUserInput(e.target.value);\n  };\n\n  const addHandler = e => {\n    const newArr = [...list];\n    newArr.push(userInput);\n    setList(newArr);\n    setUserInput(\"\");\n  };\n\n  const removeHandler = index => {\n    const newArr = [...list];\n    newArr.splice(index, 1);\n    setList(newArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: updateInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addHandler,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: userInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), list.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        index: index,\n        removeHandler: removeHandler,\n        item: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 16\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"557p8uhvOCfh0SlwHNpe0mQH0kA=\");\n\n_c = App;\n\nconst Card = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => props.removeHandler(props.index),\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Card;\nexport default App; ///////////todo list TUTOR EXAMPLE/////////////////\n// import { useState } from \"react\";\n// const App = () => {\n//   const [list, setList] = useState([]);\n//   const [userInput, setUserInput] = useState(\"\");\n//   const updateInput = (e) => {\n//     setUserInput(e.target.value);\n//   };\n//   const addHandler = () => {\n//     const newArr = [...list];\n//     newArr.push(userInput);\n//     setList(newArr);\n//     setUserInput(\"\")\n//   };\n//   const removeHandler = (index) => {\n//     const newArr = [...list];\n//     newArr.splice(index, 1);\n//     setList(newArr);\n//   };\n//   return (\n//     <div>\n//       <h1>todo list</h1>\n//       <input type=\"text\" value={userInput} onChange={updateInput} />\n//       <button onClick={addHandler}>add</button>\n//       <h2>{userInput}</h2>\n//       {list.map((item, index) => {\n//         return <Card index={index} removeHandler={removeHandler} key={index} item={item} />;\n//       })}\n//     </div>\n//   );\n// };\n// const Card = (props) => {\n//   return (\n//     <div>\n//       <h2>{props.item}</h2>\n//       <button onClick={() => props.removeHandler(props.index)}>remove</button>\n//     </div>\n//   );\n// };\n// export default App;\n//// todo list ATTEMPT 1\n// import React, {useState} from \"react\";\n// import './App.css';\n// const IntroState = () => {\n//   const [tasks, setTasks] = useState([\n//     {task: \"shopping\", status: 33},\n//     {task: \"cooking\", status:12},\n//     {task: \"cleaning\", status: 13}\n//   ]);\n//   const [completed,setStatus] = useState(true);\n//   const greeting = (value) => {\n//     alert(value);\n//   };\n//   return (\n//     <div>\n//       {this.tasks.map((task, index) => {\n//         {!completed ? (\n//           <div className=\".item\">\n//             <Task task = {tasks[0].task} func={greeting(\"in progress\")} />\n//             <button onClick={() => setStatus(true)}>complete</button>\n//           </div>\n//         ) : (\n//           <div className=\".item\">\n//             <Task task = {tasks[0].task} func={greeting(\"complete\")} />\n//             <button onClick={() => setStatus(false)}>in progress</button>\n//           </div>\n//         )}\n//       })}\n//     </div>\n//   )\n// }\n// const Task = (props) => {\n//   return (\n//     <div>\n//       <h1>{props.task}</h1>\n//     </div>\n//   )\n// }\n// export default IntroState\n/////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n// export default App\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n// export default App\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n// export default App\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n// export default App\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n// }\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n//     increment = () => {\n//     }\n//   }\n// //////////////state demonstration 1/////////////////////\n// import './App.css';\n// import React from 'react';\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n// export default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js"],"names":["useState","App","list","setList","userInput","setUserInput","updateInput","e","target","value","addHandler","newArr","push","removeHandler","index","splice","map","item","Card","props"],"mappings":";;;AACA;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,WAAW,GAAIC,CAAD,IAAO;AACzBF,IAAAA,YAAY,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACD,GAFD;;AAGA,QAAMC,UAAU,GAAIH,CAAD,IAAO;AACxB,UAAMI,MAAM,GAAG,CAAC,GAAGT,IAAJ,CAAf;AACAS,IAAAA,MAAM,CAACC,IAAP,CAAYR,SAAZ;AACAD,IAAAA,OAAO,CAACQ,MAAD,CAAP;AACAN,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACD,GALD;;AAMA,QAAMQ,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMH,MAAM,GAAG,CAAC,GAAGT,IAAJ,CAAf;AACAS,IAAAA,MAAM,CAACI,MAAP,CAAcD,KAAd,EAAqB,CAArB;AACAX,IAAAA,OAAO,CAACQ,MAAD,CAAP;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEP,SAA1B;AAAqC,MAAA,QAAQ,EAAEE;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEI,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGF,IAAI,CAACc,GAAL,CAAS,CAACC,IAAD,EAAOH,KAAP,KAAiB;AACzB,0BAAO,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,KAAb;AAAoB,QAAA,aAAa,EAAED,aAAnC;AAA8D,QAAA,IAAI,EAAEI;AAApE,SAAuDH,KAAvD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;GAAMb,G;;KAAAA,G;;AAgCN,MAAMiB,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA,4BACE;AAAA,gBAAKA,KAAK,CAACF;AAAX;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAME,KAAK,CAACN,aAAN,CAAoBM,KAAK,CAACL,KAA1B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMI,I;AAQN,eAAejB,GAAfsourcesContent":["\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nconst App = () => {\n  const [list, setList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const updateInput = (e) => {\n    setUserInput(e.target.value);\n  };\n  const addHandler = (e) => {\n    const newArr = [...list];\n    newArr.push(userInput);\n    setList(newArr);\n    setUserInput(\"\")\n  };\n  const removeHandler = (index) => {\n    const newArr = [...list];\n    newArr.splice(index, 1);\n    setList(newArr);\n  };\n\n  return (\n    <div>\n      <h1>todo list</h1>\n      <input type=\"text\" value={userInput} onChange={updateInput} />\n      <button onClick={addHandler}>add</button>\n      <h2>{userInput}</h2>\n      {list.map((item, index) => {\n        return <Card index={index} removeHandler={removeHandler} key={index} item={item} />;\n      })}\n    </div>\n  );\n};\n\nconst Card = (props) => {\n  return (\n    <div>\n      <h2>{props.item}</h2>\n      <button onClick={() => props.removeHandler(props.index)}>remove</button>\n    </div>\n  );\n};\nexport default App;\n\n///////////todo list TUTOR EXAMPLE/////////////////\n\n// import { useState } from \"react\";\n// const App = () => {\n//   const [list, setList] = useState([]);\n//   const [userInput, setUserInput] = useState(\"\");\n\n//   const updateInput = (e) => {\n//     setUserInput(e.target.value);\n//   };\n//   const addHandler = () => {\n//     const newArr = [...list];\n//     newArr.push(userInput);\n//     setList(newArr);\n//     setUserInput(\"\")\n//   };\n//   const removeHandler = (index) => {\n//     const newArr = [...list];\n//     newArr.splice(index, 1);\n//     setList(newArr);\n//   };\n\n//   return (\n//     <div>\n//       <h1>todo list</h1>\n//       <input type=\"text\" value={userInput} onChange={updateInput} />\n//       <button onClick={addHandler}>add</button>\n//       <h2>{userInput}</h2>\n//       {list.map((item, index) => {\n//         return <Card index={index} removeHandler={removeHandler} key={index} item={item} />;\n//       })}\n//     </div>\n//   );\n// };\n\n// const Card = (props) => {\n//   return (\n//     <div>\n//       <h2>{props.item}</h2>\n//       <button onClick={() => props.removeHandler(props.index)}>remove</button>\n//     </div>\n//   );\n// };\n// export default App;\n\n\n\n\n//// todo list ATTEMPT 1\n// import React, {useState} from \"react\";\n// import './App.css';\n\n// const IntroState = () => {\n//   const [tasks, setTasks] = useState([\n//     {task: \"shopping\", status: 33},\n//     {task: \"cooking\", status:12},\n//     {task: \"cleaning\", status: 13}\n//   ]);\n\n//   const [completed,setStatus] = useState(true);\n\n//   const greeting = (value) => {\n//     alert(value);\n//   };\n\n//   return (\n//     <div>\n//       {this.tasks.map((task, index) => {\n//         {!completed ? (\n//           <div className=\".item\">\n//             <Task task = {tasks[0].task} func={greeting(\"in progress\")} />\n//             <button onClick={() => setStatus(true)}>complete</button>\n//           </div>\n\n//         ) : (\n//           <div className=\".item\">\n//             <Task task = {tasks[0].task} func={greeting(\"complete\")} />\n//             <button onClick={() => setStatus(false)}>in progress</button>\n//           </div>\n//         )}\n//       })}\n//     </div>\n//   )\n// }\n\n// const Task = (props) => {\n//   return (\n//     <div>\n//       <h1>{props.task}</h1>\n//     </div>\n//   )\n// }\n\n\n\n// export default IntroState\n\n/////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n  \n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n\n// export default App\n\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n\n// export default App\n\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n\n// export default App\n\n\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n\n// export default App\n\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n\n// }\n\n\n\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n    \n//     increment = () => {\n\n//     }\n//   }\n\n// //////////////state demonstration 1/////////////////////\n\n// import './App.css';\n// import React from 'react';\n\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n\n// export default App;"]},"metadata":{},"sourceType":"module"}