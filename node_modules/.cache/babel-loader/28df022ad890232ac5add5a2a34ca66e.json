{"ast":null,"code":"var _jsxFileName = \"/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js\",\n    _s = $RefreshSig$();\n\n/////TODO todo list\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [list, setList] = useState([{\n    title: \"shopping\",\n    status: 'true'\n  }, {\n    title: \"cook\",\n    status: 'false'\n  }, {\n    title: \"give lift\",\n    status: 'false'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: this.state.list.map((list, index) => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        title: list.title,\n        status: list.status\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ym+IGfhAyfnL0nO68pjmJ2Bz/Q0=\");\n\n_c = App;\n\nconst Item = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"status\",\n      children: props.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Item;\nexport default App; /////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n// export default App\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n// export default App\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n// export default App\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n// export default App\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n// }\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n//     increment = () => {\n//     }\n//   }\n// //////////////state demonstration 1/////////////////////\n// import './App.css';\n// import React from 'react';\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n// export default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Item\");","map":{"version":3,"sources":["/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js"],"names":["React","useState","App","list","setList","title","status","state","map","index","Item","props"],"mappings":";;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,CAC/B;AAACI,IAAAA,KAAK,EAAC,UAAP;AAAmBC,IAAAA,MAAM,EAAC;AAA1B,GAD+B,EAE/B;AAACD,IAAAA,KAAK,EAAC,MAAP;AAAeC,IAAAA,MAAM,EAAC;AAAtB,GAF+B,EAG/B;AAACD,IAAAA,KAAK,EAAC,WAAP;AAAoBC,IAAAA,MAAM,EAAC;AAA3B,GAH+B,CAAD,CAAhC;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACG,KAAKC,KAAL,CAAWJ,IAAX,CAAgBK,GAAhB,CAAoB,CAACL,IAAD,EAAOM,KAAP,KAAiB;AACpC,0BAAO,QAAC,IAAD;AAAkB,QAAA,KAAK,EAAEN,IAAI,CAACE,KAA9B;AAAqC,QAAA,MAAM,EAAEF,IAAI,CAACG;AAAlD,SAAWG,KAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMP,G;;KAAAA,G;;AAiBN,MAAMQ,IAAI,GAAGC,KAAK,IAAI;AACpB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBA,KAAK,CAACN;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,gBAAwBM,KAAK,CAACL;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPD;;MAAMI,I;AASN,eAAeR,GAAfsourcesContent":["\n/////TODO todo list\nimport React, {useState} from \"react\";\nimport './App.css';\n\nconst App = () => {\n  const [list, setList] = useState([\n    {title:\"shopping\", status:'true'},\n    {title:\"cook\", status:'false'},\n    {title:\"give lift\", status:'false'}\n  ])\n\n  return(\n    <div className='container'>\n      {this.state.list.map((list, index) => {\n        return <Item key={index} title={list.title} status={list.status} />;\n      })}\n    </div>\n  )\n}\n\n\nconst Item = props => {\n  return (\n    <div className=\"item\">\n      <h2 className=\"title\">{props.title}</h2>\n      <h3 className=\"status\">{props.status}</h3>\n    </div>\n  )\n}\n\nexport default App\n\n/////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n  \n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n\n// export default App\n\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n\n// export default App\n\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n\n// export default App\n\n\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n\n// export default App\n\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n\n// }\n\n\n\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n    \n//     increment = () => {\n\n//     }\n//   }\n\n// //////////////state demonstration 1/////////////////////\n\n// import './App.css';\n// import React from 'react';\n\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n\n// export default App;"]},"metadata":{},"sourceType":"module"}