{"ast":null,"code":"var _jsxFileName = \"/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js\",\n    _s = $RefreshSig$();\n\n/////TODO todo list\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IntroState = () => {\n  _s();\n\n  const [num, setNum] = useState();\n  const [tasks, settasks] = useState([{\n    task: \"shopping\",\n    status: 33\n  }, {\n    task: \"cooking\",\n    status: 12\n  }, {\n    task: \"\"\n  }]);\n  const [loggedIn, setStatus] = useState(true);\n\n  const greeting = value => {\n    alert(\"hello\" + value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !loggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatus(true),\n        children: \"complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Person, {\n        task: tasks[0].task,\n        func: greeting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatus(false),\n        children: \"in progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IntroState, \"E8RoXSPaWk+qCVpa85HbcHHiyr0=\");\n\n_c = IntroState;\n\nconst Person = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      onclick: () => props.func(props.task),\n      children: props.task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Person;\nexport default IntroState; /////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n// export default App\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n// export default App\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n// export default App\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n// export default App\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n// }\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n//     increment = () => {\n//     }\n//   }\n// //////////////state demonstration 1/////////////////////\n// import './App.css';\n// import React from 'react';\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n// export default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IntroState\");\n$RefreshReg$(_c2, \"Person\");","map":{"version":3,"sources":["/home/joep/Downloads/code_nation/masterCourse/week5/learning-react/src/App.js"],"names":["React","useState","IntroState","num","setNum","tasks","settasks","task","status","loggedIn","setStatus","greeting","value","alert","Person","props","func"],"mappings":";;;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBH,QAAQ,EAA9B;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC;AAACM,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,MAAM,EAAE;AAA3B,GADiC,EAEjC;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,MAAM,EAAC;AAAzB,GAFiC,EAGjC;AAACD,IAAAA,IAAI,EAAE;AAAP,GAHiC,CAAD,CAAlC;AAKA,QAAM,CAACE,QAAD,EAAUC,SAAV,IAAuBT,QAAQ,CAAC,IAAD,CAArC;;AAEA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AAC1BC,IAAAA,KAAK,CAAC,UAAUD,KAAX,CAAL;AACD,GAFD;;AAIA,sBACE;AAAA,cACG,CAACH,QAAD,gBACC;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAIL,KAAK,CAAC,CAAD,CAAL,CAASE,IAAzB;AAA+B,QAAA,IAAI,EAAEI;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMD,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA5BD;;GAAMR,U;;KAAAA,U;;AA8BN,MAAMY,MAAM,GAAIC,KAAD,IAAW;AACxB,sBACE;AAAA,2BACE;AAAI,MAAA,OAAO,EAAE,MAAMA,KAAK,CAACC,IAAN,CAAWD,KAAK,CAACR,IAAjB,CAAnB;AAAA,gBAA4CQ,KAAK,CAACR;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;MAAMO,M;AAQN,eAAeZ,UAAfsourcesContent":["\n/////TODO todo list\nimport React, {useState} from \"react\";\nimport './App.css';\n\nconst IntroState = () => {\n  const [num, setNum] = useState()\n  const [tasks, settasks] = useState([\n    {task: \"shopping\", status: 33},\n    {task: \"cooking\", status:12},\n    {task: \"\"}\n  ]);\n  const [loggedIn,setStatus] = useState(true);\n\n  const greeting = (value) => {\n    alert(\"hello\" + value);\n  };\n\n  return (\n    <div>\n      {!loggedIn ? (\n        <div>\n          <button onClick={() => setStatus(true)}>complete</button>\n        </div>\n\n      ) : (\n        <div>\n          <Person task = {tasks[0].task} func={greeting} />\n          <button onClick={() => setStatus(false)}>in progress</button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      <h1 onclick={() => props.func(props.task)}>{props.task}</h1>\n    </div>\n  )\n}\n\nexport default IntroState\n\n/////TODO complete props challenges presentation\n/////TODO resume map presentation slide 29\n\n/////////////map method - returning entire components//////////\n// import React from 'react'\n// class App extends React.Component{\n//   state = {\n//     people: [\n//       {name: \"dan\", age:34},\n//       {name: \"ben\", age:21}\n//     ]    \n//   };\n  \n//   render() {\n//     return(\n//       <div>\n//         {this.state.people.map((person,index) =>{\n//           return <Person key={index} name={person.name} age={person.age} />;\n//         })}\n//       </div>  \n//     )\n//   }\n// }\n\n// const Person = props => { //Person parameter represents each item in our array. These items are an object so we can use dot notation to access its values, but they'll be different each time.\n//   return (\n//     <div>\n//       <h1>{props.name}</h1>\n//       <p>{props.age}</p>\n//     </div>\n//   )\n// }\n\n// export default App\n\n/////////////map method - using state////////\n//this is the same as below method, but using state instead of render()\n// import React from 'react'\n// class App extends React.Component {\n//   state = { //Sometimes you will stores arrays and stuff in the state. this is how.\n//     bookPrices: [2.5, 4.5, 3.5, 6.0, 8.0]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         {this.state.bookPrices.map((price, index) => {\n//           return (\n//           <div key={index}> {/*If map function returns multiple elements,you only need to put a key on the parent.*/}\n//             <h1>I am h1 element</h1>\n//             <p>i am p element</p>\n//             <p>{price}</p>\n//             <button>Button</button>\n//           </div>)\n//         })}\n//       </div>\n//     )\n//   }\n// }\n\n// export default App\n\n//////////////map method/////////////////////\n// import React from 'react'\n// class App extends React.Component {\n//   render() {\n//     const bookPrices = [2.5, 4.5, 3.5, 6.9, 8.0] //variables, functions and stuff get declared in render()\n\n//   return (\n//     <div>\n//       {bookPrices.map(price => {\n//         return <h1>The price is {price}</h1>;\n//       })}\n//     </div>\n//   )\n//   }\n// }\n\n// export default App\n\n\n///////////incremenet and decrementing with buttons////////////////////////\n//show value which get decreased when minus button pressed and increased when up button pressed.\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [num, setNum] = useState(0)\n//   const minusHandler = () => {\n//     setNum(num -1)\n//   }\n//   return (\n//     <div>\n//       <h1>{num}</h1>\n//       <button onClick={() => setNum(num + 1)}>add one</button>\n//       <button onClick={() => setNum(num - 1)}>minus one</button>\n//       {/* <button onClick={minusHandler}>minus one</button> */} {/*alternative to above line */}\n//     </div>\n//   )\n// }\n\n// export default App\n\n////////////////////////////////////////////\n// Here we pass state and methods via props\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//   const [persons, setPersons] = useState([\n//     {name: \"Leon\"}, \n//     {name: \"Jordan\"}\n//   ])\n\n//   const handleClick = () => {\n//     console.log(\"Clickity click\");\n//   }\n\n//   return (\n//     <div>\n//       <Person name={persons[0].name} clickMe={handleClick}/>\n//       <Person name={persons[1].name} clickMe={handleClick}/>\n//     </div>\n//   )\n// }\n\n// const Person = (props) => {\n//   return (\n//     // <h1 onClick={props.clickMe}>{props.name}</h1> //prints \"clickety click\" upon click of \"Jordan\" text.\n//     <h1 onClick={() => props.clickMe(\"Hi there\")}>{props.name}</h1> //This is how to pass a value to a function on click, which is handled slightly differnetly. this is called an anonymous function.\n//   )\n\n// }\n\n\n\n//////////////stateDemonstration 2//////////////////////\n// import React, {useState} from \"react\";\n\n// const App = () => {\n//     const [count, setCount] = useState(0) //useState function returns 2 values which we restructure with []\n\n//     return (\n//       <div>\n//         <h1>{count}</h1>\n//       </div>\n//     )\n    \n//     increment = () => {\n\n//     }\n//   }\n\n// //////////////state demonstration 1/////////////////////\n\n// import './App.css';\n// import React from 'react';\n\n// class App extends React.Component {\n//   state = {  //state is a property of the class\n//     persons: [ //persons is a property of state. Holds an array of 2 objects.\n//       {name: \"Dan\", age: 34},\n//       {name: \"Ben\", age: 21}\n//     ]\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <h1>I'm a class component</h1>\n//         <p>{this.state.persons[1].age}</p> {/* returns age of 2nd persons. (21)*/}        \n//       </div>\n//     );\n//   }\n// }\n// ///////////////////////////////////////////\n\n// export default App;"]},"metadata":{},"sourceType":"module"}