[{"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/index.js":"1","/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/App.js":"2","/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/reportWebVitals.js":"3"},{"size":500,"mtime":1639756186849,"results":"4","hashOfConfig":"5"},{"size":2625,"mtime":1639757015106,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1639756186849,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"of32bs",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/index.js",[],"/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/App.js",["15"],"\n///////////todo list ATTEMPT 2/////////////////\nimport { useState } from \"react\";\nimport './App.css';\nconst App = () => {\n  const [todoList, setTodoList] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n\n  const updateInput = (e) => { //onChange of inputbox, \n    setUserInput(e.target.value); //make userInput = input of box\n  };\n\n  const addHandler = (e) => { //onClick of add button\n    const newArr = [...todoList]; //Adds every task in {todoList} to newArr.\n    newArr.push(userInput); //add userInput of textbox to newArr (adds new task to list)\n    setTodoList(newArr); //sets todoList to newArray (updates frontEnd todoList with new list.)\n    setUserInput(\"\") //remove input displayed below inputBox. (seems as though nothing has changed, but the text displayed is now the content of the array, not the userInput.)\n  };\n\n  const removeHandler = (index) => { //remove task from list\n    const newArr = [...todoList]; //add every task in toDo list to newArr (makes an identical copy)\n    newArr.splice(index, 1); //remove task from array\n    setTodoList(newArr); //updates frontend array with new version\n  };\n\n  return (\n    <div>\n      <div id=\"inputs\">\n        <input \n          type=\"text\" \n          onChange={updateInput}\n        />\n        <button \n          id=\"addButton\"\n          onClick={addHandler}>\n            add\n        </button>\n        <p>Click on the below buttons to remove tasks or change status</p>\n      </div>\n      {todoList.map((item, index) => {\n        return <Card \n          index={index} \n          removeHandler={removeHandler} \n          key={index} \n          item={item} \n        />;\n      })}\n    </div>\n  );\n};\n\nconst Card = (props) => {\n  const [style, setStyle] = useState(\"inProgressButton button\")\n  const [status, setStatus] = useState(\"In Progress\")\n\n  const changeStyle = () => {\n    console.log(\"you just clicked\");\n    if (status==\"Complete\") {\n      setStatus(\"In Progress\");\n      setStyle(\"inProgressButton button\")\n    } else {\n      setStatus(\"Complete\");\n      setStyle(\"completeButton button\")\n    }\n  };\n  \n  return (\n      <div className=\"item\">\n        <h2 className=\"task\">{props.item}</h2>\n        <div className=\"test\">\n          <div \n            className={style}\n            onClick={() => changeStyle(\"Complete\")}>\n            <p>\n              {status}\n            </p>\n          </div>\n          <div \n            className=\"remButton button\"\n            onClick={() => props.removeHandler(props.index)}>\n            <p>\n              remove\n            </p>\n          </div>\n        </div>\n    </div>\n  );\n  };\n\nexport default App;\n","/home/joep/Downloads/code_nation/masterCourse/week5/submissions/todoList/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":59,"column":15,"nodeType":"18","messageId":"19","endLine":59,"endColumn":17},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]